{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {}\n  // static loggedinUser:User={\n  //   id:1,\n  //   firstName:'',\n  //   lastName:'',\n  //   username:'',\n  //   type:1,\n  //   email:'',\n  //   password:'',\n  //   mobile:'',\n  //   isActive:false\n  // };\n  storeInLocalStorage(key, value) {\n    if (typeof value == 'string') {} else {\n      console.log(value);\n      value = JSON.stringify(value);\n    }\n    localStorage.setItem(key, value);\n  }\n  getFromLocalStorage(key) {\n    let temp = localStorage.getItem(key);\n    return temp;\n  }\n  // getPropertyFromLocalStorage(key:string, property:string){\n  //   return this.getFromLocalStorage(key)[property];\n  // }\n  clearLocalStorage() {\n    localStorage.clear();\n  }\n  getDecodedToken(token) {\n    try {\n      let helper = new JwtHelperService();\n      return helper.decodeToken(token);\n    } catch (Error) {\n      return null;\n    }\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;;AAKrD,OAAM,MAAOC,WAAW;EAEtBC,eAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGAC,mBAAmB,CAACC,GAAU,EAAEC,KAAS;IACvC,IAAG,OAAOA,KAAK,IAAE,QAAQ,EAAC,EACzB,MACG;MACFC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBA,KAAK,GAAEG,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;;IAE9BK,YAAY,CAACC,OAAO,CAACP,GAAG,EAAEC,KAAK,CAAC;EAClC;EAEAO,mBAAmB,CAACR,GAAU;IAC5B,IAAIS,IAAI,GAACH,YAAY,CAACI,OAAO,CAACV,GAAG,CAAC;IAClC,OAAOS,IAAI;EACb;EAEA;EACA;EACA;EAEAE,iBAAiB;IACfL,YAAY,CAACM,KAAK,EAAE;EACtB;EAGAC,eAAe,CAACC,KAAa;IAC3B,IAAI;MACF,IAAIC,MAAM,GAAE,IAAInB,gBAAgB,EAAE;MAClC,OAAOmB,MAAM,CAACC,WAAW,CAACF,KAAK,CAAC;KACjC,CACD,OAAMG,KAAK,EAAE;MACX,OAAO,IAAI;;EAEf;;AAnDWpB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["JwtHelperService","UserService","constructor","storeInLocalStorage","key","value","console","log","JSON","stringify","localStorage","setItem","getFromLocalStorage","temp","getItem","clearLocalStorage","clear","getDecodedToken","token","helper","decodeToken","Error","factory","providedIn"],"sourceRoot":"","sources":["/Users/hafeez/My stuff/Technovert Internship/Task 5/task-5-car-pooling-web-api-csharp-hafeez-fsd/Carpool/src/app/shared/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './models/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() {\n\n  }\n\n  // static loggedinUser:User={\n  //   id:1,\n  //   firstName:'',\n  //   lastName:'',\n  //   username:'',\n  //   type:1,\n  //   email:'',\n  //   password:'',\n  //   mobile:'',\n  //   isActive:false\n  // };\n\n\n  storeInLocalStorage(key:string, value:any){\n    if(typeof value=='string'){\n    }\n    else{\n      console.log(value);\n      value= JSON.stringify(value);\n    }\n    localStorage.setItem(key, value);\n  }\n\n  getFromLocalStorage(key:string){\n    let temp=localStorage.getItem(key);\n    return temp;\n  }\n\n  // getPropertyFromLocalStorage(key:string, property:string){\n  //   return this.getFromLocalStorage(key)[property];\n  // }\n\n  clearLocalStorage(){\n    localStorage.clear();\n  }\n\n\n  getDecodedToken(token: string) {\n    try {\n      let helper= new JwtHelperService();\n      return helper.decodeToken(token);\n    } \n    catch(Error) {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}