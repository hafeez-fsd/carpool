{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet OfferMenu2Component = class OfferMenu2Component {\n  constructor(dataService, userService, router) {\n    this.dataService = dataService;\n    this.userService = userService;\n    this.router = router;\n    this.array = [1];\n    this.times = ['5am - 9am', '9am - 12pm', '12pm - 3pm', '3pm - 6pm', '6pm - 9pm'];\n    this.locations = [];\n    this.stops = [];\n    this.offerRequest = {\n      offeredTime: '12AM',\n      offererId: 1,\n      from: 6,\n      to: 7,\n      date: '',\n      time: '',\n      stops: '',\n      seatsAvailable: 1\n    };\n    this.toggleMenu = false;\n    this.menu1Event = new EventEmitter();\n  }\n  ngOnInit() {\n    this.locations = this.dataService.locations;\n  }\n  addStop() {\n    this.array.push(this.array[this.array.length - 1] + 1);\n  }\n  submitForm(offerForm) {\n    const date = new Date();\n    const formattedTime = date.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: true\n    });\n    this.offerRequest.offeredTime = formattedTime;\n    this.offerRequest.offererId = this.userService.getFromLocalStorage('user').id;\n    this.dataService.offerRide(this.offerRequest).subscribe(responseData => {\n      this.stops = responseData.data.stops.split(', ');\n      alert(\"Ride successfully offered!\");\n      offerForm.reset();\n      this.router.navigate(['/acc/menu']);\n    });\n  }\n  mapLocStops(loc) {\n    let locId = this.locations.find(location => location.name == loc).id;\n    this.offerRequest.stops += locId + \", \";\n  }\n  mapLocTo(loc) {\n    // let data=loc.value;\n    // this.offerRequest.to = this.locations.find(location => location.name == data)!.id;\n  }\n  displayMenu2() {\n    this.toggleMenu = !this.toggleMenu;\n    this.menu1Event.emit(this.toggleMenu);\n  }\n  setSeatOffered(seatCount) {\n    this.offerRequest.seatsAvailable = seatCount;\n  }\n  setPrice(price) {\n    // this.offerRequest.\n  }\n};\n__decorate([Input()], OfferMenu2Component.prototype, \"offerRequest\", void 0);\n__decorate([Output()], OfferMenu2Component.prototype, \"menu1Event\", void 0);\nOfferMenu2Component = __decorate([Component({\n  selector: 'app-offer-menu2',\n  templateUrl: './offer-menu2.component.html',\n  styleUrls: ['./offer-menu2.component.scss']\n})], OfferMenu2Component);\nexport { OfferMenu2Component };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","OfferMenu2Component","constructor","dataService","userService","router","offeredTime","offererId","from","to","date","time","stops","seatsAvailable","ngOnInit","locations","addStop","array","push","length","submitForm","offerForm","Date","formattedTime","toLocaleTimeString","hour","minute","second","hour12","offerRequest","getFromLocalStorage","id","offerRide","subscribe","responseData","data","split","alert","reset","navigate","mapLocStops","loc","locId","find","location","name","mapLocTo","displayMenu2","toggleMenu","menu1Event","emit","setSeatOffered","seatCount","setPrice","price","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/hafeez/My stuff/Technovert Internship/Task 5/task-5-car-pooling-web-api-csharp-hafeez-fsd/Carpool/src/app/account/offer-ride/offer-menu2/offer-menu2.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from 'src/app/shared/models/location';\nimport { OfferRequest } from 'src/app/shared/models/offerRequest';\nimport { DataService } from 'src/app/shared/services/data.service';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-offer-menu2',\n  templateUrl: './offer-menu2.component.html',\n  styleUrls: ['./offer-menu2.component.scss'],\n})\nexport class OfferMenu2Component implements OnInit {\n  array = [1];\n\n  times = ['5am - 9am', '9am - 12pm', '12pm - 3pm', '3pm - 6pm', '6pm - 9pm'];\n\n  locations: Location[] = [];\n\n  stops:string[]=[];\n\n  @Input()\n  offerRequest: OfferRequest = {\n    offeredTime: '12AM',\n    offererId: 1,\n    from: 6,\n    to: 7,\n    date: '',\n    time: '',\n    stops:'',\n    seatsAvailable: 1,\n  };\n\n  toggleMenu: boolean = false;\n\n  constructor(private dataService: DataService, private userService:UserService, private router:Router) {}\n\n  ngOnInit(): void {\n    this.locations = this.dataService.locations;\n  }\n\n  addStop() {\n    this.array.push(this.array[this.array.length - 1] + 1);\n  }\n  submitForm(offerForm: NgForm) {\n    const date = new Date();\n    const formattedTime = date.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      hour12: true,\n    });\n\n    this.offerRequest.offeredTime=formattedTime;\n\n    this.offerRequest.offererId=this.userService.getFromLocalStorage('user').id;\n    \n    this.dataService.offerRide(this.offerRequest).subscribe(\n      responseData=>{\n        this.stops=responseData.data.stops.split(', ');\n        alert(\"Ride successfully offered!\");\n        offerForm.reset();\n        this.router.navigate(['/acc/menu']);\n        \n      }\n    );\n  }\n\n  mapLocStops(loc: string) {\n    let locId=this.locations.find(location => location.name == loc)!.id;\n    this.offerRequest.stops+= locId+\", \";\n  }\n\n  mapLocTo(loc: any) {\n    // let data=loc.value;\n    // this.offerRequest.to = this.locations.find(location => location.name == data)!.id;\n  }\n\n  @Output() menu1Event: EventEmitter<boolean> = new EventEmitter();\n\n  displayMenu2() {\n    this.toggleMenu = !this.toggleMenu;\n    this.menu1Event.emit(this.toggleMenu);\n  }\n\n  setSeatOffered(seatCount:number){\n    this.offerRequest.seatsAvailable=seatCount;\n  }\n\n  setPrice(price:string){\n    // this.offerRequest.\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}