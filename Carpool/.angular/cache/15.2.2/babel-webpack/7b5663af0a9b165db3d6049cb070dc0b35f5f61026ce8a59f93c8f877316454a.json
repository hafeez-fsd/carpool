{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {}\n  // static loggedinUser:User={\n  //   id:1,\n  //   firstName:'',\n  //   lastName:'',\n  //   username:'',\n  //   type:1,\n  //   email:'',\n  //   password:'',\n  //   mobile:'',\n  //   isActive:false\n  // };\n  storeInLocalStorage(key, value) {\n    if (typeof value == 'string') {} else {\n      value = JSON.stringify(value);\n    }\n    localStorage.setItem(key, value);\n  }\n  getFromLocalStorage(key) {\n    let temp = localStorage.getItem(key);\n    if (temp != null) {\n      if (key == 'token') {\n        temp = this.getDecodedToken(temp);\n        // console.log(typeof temp)\n      }\n\n      if (typeof temp == 'string') {\n        return temp;\n      } else {\n        if (temp != null) {\n          // console.log(typeof temp);\n          // return \n          let temp1 = JSON.parse(JSON.stringify(temp));\n          console.log(temp1);\n          return temp1;\n        }\n      }\n    }\n  }\n  getPropertyFromLocalStorage(key, property) {\n    return this.getFromLocalStorage(key)[property];\n  }\n  clearLocalStorage() {\n    localStorage.clear();\n  }\n  getDecodedToken(token) {\n    try {\n      let helper = new JwtHelperService();\n      return helper.decodeToken(token);\n    } catch (Error) {\n      return null;\n    }\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;;AAKrD,OAAM,MAAOC,WAAW;EAEtBC,eAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGAC,mBAAmB,CAACC,GAAU,EAAEC,KAAS;IACvC,IAAG,OAAOA,KAAK,IAAE,QAAQ,EAAC,EACzB,MACG;MACFA,KAAK,GAAEC,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;;IAE9BG,YAAY,CAACC,OAAO,CAACL,GAAG,EAAEC,KAAK,CAAC;EAClC;EAEAK,mBAAmB,CAACN,GAAU;IAC5B,IAAIO,IAAI,GAACH,YAAY,CAACI,OAAO,CAACR,GAAG,CAAC;IAElC,IAAGO,IAAI,IAAE,IAAI,EAAC;MACZ,IAAGP,GAAG,IAAE,OAAO,EAAC;QACdO,IAAI,GAAC,IAAI,CAACE,eAAe,CAACF,IAAI,CAAC;QAC/B;;;MAGJ,IAAG,OAAOA,IAAI,IAAE,QAAQ,EAAC;QACvB,OAAOA,IAAI;OACZ,MACG;QACF,IAAGA,IAAI,IAAE,IAAI,EAAC;UACZ;UACA;UACA,IAAIG,KAAK,GAACR,IAAI,CAACS,KAAK,CAACT,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC,CAAC;UAC1CK,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UAClB,OAAOA,KAAK;;;;EAKlB;EAEAI,2BAA2B,CAACd,GAAU,EAAEe,QAAe;IACrD,OAAO,IAAI,CAACT,mBAAmB,CAACN,GAAG,CAAC,CAACe,QAAQ,CAAC;EAChD;EAEAC,iBAAiB;IACfZ,YAAY,CAACa,KAAK,EAAE;EACtB;EAGAR,eAAe,CAACS,KAAa;IAC3B,IAAI;MACF,IAAIC,MAAM,GAAE,IAAIvB,gBAAgB,EAAE;MAClC,OAAOuB,MAAM,CAACC,WAAW,CAACF,KAAK,CAAC;KACjC,CACD,OAAMG,KAAK,EAAE;MACX,OAAO,IAAI;;EAEf;;AAtEWxB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAyB,SAAXzB,WAAW;EAAA0B,YAFV;AAAM","names":["JwtHelperService","UserService","constructor","storeInLocalStorage","key","value","JSON","stringify","localStorage","setItem","getFromLocalStorage","temp","getItem","getDecodedToken","temp1","parse","console","log","getPropertyFromLocalStorage","property","clearLocalStorage","clear","token","helper","decodeToken","Error","factory","providedIn"],"sourceRoot":"","sources":["/Users/hafeez/My stuff/Technovert Internship/Task 5/task-5-car-pooling-web-api-csharp-hafeez-fsd/Carpool/src/app/shared/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './models/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() {\n\n  }\n\n  // static loggedinUser:User={\n  //   id:1,\n  //   firstName:'',\n  //   lastName:'',\n  //   username:'',\n  //   type:1,\n  //   email:'',\n  //   password:'',\n  //   mobile:'',\n  //   isActive:false\n  // };\n\n\n  storeInLocalStorage(key:string, value:any){\n    if(typeof value=='string'){\n    }\n    else{\n      value= JSON.stringify(value);\n    }\n    localStorage.setItem(key, value);\n  }\n\n  getFromLocalStorage(key:string){\n    let temp=localStorage.getItem(key);\n    \n    if(temp!=null){\n      if(key=='token'){\n        temp=this.getDecodedToken(temp);\n        // console.log(typeof temp)\n      }\n\n    if(typeof temp=='string'){\n      return temp;\n    }\n    else{\n      if(temp!=null){\n        // console.log(typeof temp);\n        // return \n        let temp1=JSON.parse(JSON.stringify(temp));\n        console.log(temp1);\n        return temp1;\n      }\n        \n    }\n    }\n  }\n\n  getPropertyFromLocalStorage(key:string, property:string){\n    return this.getFromLocalStorage(key)[property];\n  }\n\n  clearLocalStorage(){\n    localStorage.clear();\n  }\n\n\n  getDecodedToken(token: string) {\n    try {\n      let helper= new JwtHelperService();\n      return helper.decodeToken(token);\n    } \n    catch(Error) {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}